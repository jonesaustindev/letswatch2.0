{"version":3,"file":"static/webpack/static\\development\\pages\\movie.js.4884d026c3a339142c9b.hot-update.js","sources":["webpack:///./components/MoviePage.js"],"sourcesContent":["import React, { Component } from 'react';\r\nimport { Query } from 'react-apollo';\r\nimport gql from 'graphql-tag';\r\nimport CreateLike from './CreateLike';\r\nimport User from './User';\r\nimport PleaseSignIn from '../components/PleaseSignin';\r\nimport AddToLikes from '../components/AddToLikes';\r\n\r\nconst SINGLE_MOVIE_QUERY = gql`\r\n    query SINGLE_MOVIE_QUERY($id: ID) {\r\n        singleMovie(id: $id) {\r\n            id\r\n            poster_path\r\n            backdrop_path\r\n            overview\r\n            release_date\r\n            runtime\r\n            title\r\n            vote_average\r\n            credits {\r\n                cast {\r\n                    name\r\n                }\r\n            }\r\n            videos {\r\n                results {\r\n                    name\r\n                    type\r\n                }\r\n            }\r\n            images {\r\n                backdrops {\r\n                    file_path\r\n                }\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nclass MoviePage extends Component {\r\n    render() {\r\n        return (\r\n            <Query query={SINGLE_MOVIE_QUERY} variables={{\r\n                id: this.props.id\r\n            }}>\r\n                {({ error, loading, data }) => {\r\n                    if (error) return <p>Error!</p>;\r\n                    if (loading) return <p>Loading...</p>;\r\n                    const movie = data.singleMovie;\r\n                    return (\r\n                        <User>\r\n                            {({ data: { me } }) => (\r\n                                <div>\r\n                                    <h3>{movie.title}</h3>\r\n                                    <p>{movie.release_date.slice(0, 4)}</p>\r\n                                    <div className=\"movie-content\">\r\n                                        <h4>User Rating <span>{movie.vote_average * 10}%</span></h4>\r\n                                        <p>{movie.runtime} runtime</p>\r\n                                        <div>\r\n                                            {/* Signed in */}\r\n                                            {me && (\r\n                                                <React.Fragment>\r\n                                                    <AddToLikes id={movie.id} />\r\n                                                </React.Fragment>\r\n                                            )}\r\n\r\n                                            {/* Logged out */}\r\n                                            {!me && (\r\n                                                <React.Fragment>\r\n                                                    <button>Like</button>\r\n                                                </React.Fragment>\r\n                                            )}\r\n                                        </div>\r\n                                        <p>{movie.overview}</p>\r\n                                        <li>{movie.poster_path} poster path</li>\r\n                                        <li>{movie.backdrop_path} backdrop path</li>\r\n                                    </div>\r\n\r\n                                    <ul>\r\n                                        {movie.credits.cast.slice(0, 6).map((actor, index) => (\r\n                                            <li key={index}>{actor.name}</li>\r\n                                        ))}\r\n                                    </ul>\r\n\r\n                                    <ul>\r\n                                        {movie.videos.results.map((video, index) => (\r\n                                            <li key={index}>{video.name}</li>\r\n                                        ))}\r\n                                    </ul>\r\n\r\n                                    <ul>\r\n                                        {movie.images.backdrops.map((image, index) => (\r\n                                            <li key={index}>{image.file_path}</li>\r\n                                        ))}\r\n                                    </ul>\r\n                                </div>\r\n                            )}\r\n                        </User>\r\n                    );\r\n                }}\r\n            </Query>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MoviePage;\r\nexport { SINGLE_MOVIE_QUERY };"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AA8BA;;;;;;;;;;;;;AACA;AACA;AACA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAxCA;AAgDA;AAGA;;;;AA/DA;AACA;AAiEA;;;;;A","sourceRoot":""}