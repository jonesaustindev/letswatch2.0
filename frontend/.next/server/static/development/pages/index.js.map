{"version":3,"file":"static\\development\\pages\\index.js","sources":["webpack:///webpack/bootstrap","webpack:///./components/MovieCard.js","webpack:///./components/NowPlaying.js","webpack:///./components/Popular.js","webpack:///./containers/HomeContainer.js","webpack:///./pages/index.js","webpack:///external \"graphql-tag\"","webpack:///external \"next/link\"","webpack:///external \"react\"","webpack:///external \"react-apollo\"","webpack:///external \"react-loading\"","webpack:///external \"styled-components\""],"sourcesContent":[" \t// The module cache\n \tvar installedModules = require('../../../ssr-module-cache.js');\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tvar threw = true;\n \t\ttry {\n \t\t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n \t\t\tthrew = false;\n \t\t} finally {\n \t\t\tif(threw) delete installedModules[moduleId];\n \t\t}\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 6);\n","import React, { Component } from 'react';\r\nimport gql from 'graphql-tag';\r\nimport { Query } from 'react-apollo';\r\nimport styled from 'styled-components';\r\nimport Link from 'next/link';\r\nimport ReactLoading from 'react-loading';\r\n\r\nconst Card = styled.div`\r\n    position: relative;\r\n    /* max-height: 445px; */\r\n    overflow: hidden;\r\n    background: #000;\r\n    box-shadow: ${props => props.theme.boxShadow};\r\n    margin-top: 20px;\r\n    /* margin-bottom: 20px; */\r\n\r\n    .movie-card .poster {\r\n        position: relative;\r\n        overflow: hidden;\r\n    }\r\n\r\n    .movie-card .poster:before {\r\n        position: absolute;\r\n        content: '';\r\n        bottom: -400px;\r\n        left: 0;\r\n        width: 100%;\r\n        height: 100%;\r\n        background: linear-gradient(0deg, #000 40%, transparent);\r\n        transition: 0.5s;\r\n        z-index: 1;\r\n    }\r\n\r\n    .movie-card:hover .poster:before {\r\n        bottom: 0;\r\n    }\r\n\r\n    .movie-card .poster img {\r\n        width: 100%;\r\n        height: 100%;\r\n        transition: 0.5s;\r\n    }\r\n\r\n    .movie-card:hover .poster img {\r\n        filter: blur(2px);\r\n        transform: translateY(-40px);\r\n    }\r\n\r\n    .movie-details {\r\n        position: absolute;\r\n        padding: 20px;\r\n        width: 100%;\r\n        height: 100%;\r\n        bottom: -600px;\r\n        left: 0;\r\n        box-sizing: border-box;\r\n        transition: 0.7s;\r\n        z-index: 2;\r\n        color: #f7f7f7;\r\n    }\r\n\r\n    .movie-card:hover .movie-details {\r\n        bottom: 0;\r\n    }\r\n\r\n    .movie-details h3 {\r\n        margin: 0;\r\n        padding: 0;\r\n        padding-bottom: 5px;\r\n        font-size: 1.2rem;\r\n        font-weight: 700;\r\n    }\r\n\r\n    .movie-details h5 {\r\n        font-size: 1rem;\r\n        padding: 0;\r\n        margin: 0;\r\n    }\r\n\r\n    .movie-details h6 {\r\n        font-size: 1rem;\r\n        padding: 0;\r\n        margin: 0;\r\n    }\r\n\r\n    .movie-card p {\r\n        font-size: 0.9rem;\r\n    }\r\n\r\n    .movie-card-overview {\r\n        padding-top: 18px;\r\n    }\r\n\r\n    .movie-card-overview p {\r\n        margin-bottom: 20px;\r\n    }\r\n\r\n    .view-more {\r\n        padding-top: 50px;\r\n        color: #f7f7f7;\r\n    }\r\n\r\n    .view-more:hover {\r\n        color: #f7f7f7;\r\n        text-decoration: underline;\r\n    }\r\n\r\n    a {\r\n        font-size: 1rem;\r\n    }\r\n`;\r\n\r\nconst MOVIE_CARD_QUERY = gql`\r\n    query MOVIE_CARD_QUERY($id: ID) {\r\n        singleMovie(id: $id) {\r\n            id\r\n            poster_path\r\n            overview\r\n            release_date\r\n            title\r\n            vote_average\r\n        }\r\n    }\r\n`;\r\n\r\nclass MovieCard extends Component {\r\n    render() {\r\n        return (\r\n            <Query\r\n                query={MOVIE_CARD_QUERY}\r\n                variables={{\r\n                    id: this.props.id\r\n                }}\r\n            >\r\n                {({ error, loading, data }) => {\r\n                    if (loading) return <ReactLoading type=\"bubbles\" color=\"#FF5733\" />\r\n                    if (error) return <p>Error: {error}</p>\r\n\r\n                    const movie = data.singleMovie;\r\n                    const posterUrl = `https://image.tmdb.org/t/p/original${movie.poster_path}`;\r\n                    const overview = movie.overview.substring(0, 100) + '...';\r\n\r\n                    return (\r\n                        <Card>\r\n                            <div className=\"movie-card\">\r\n                                <div className=\"poster\"><img alt=\"movie-poster\" src={posterUrl} /></div>\r\n                                <div className=\"movie-details\">\r\n                                    <h3 className=\"card-title\">{movie.title}</h3>\r\n                                    <h5 className=\"card-text\">User Rating {movie.vote_average * 10}%</h5>\r\n                                    <h6 className=\"card-text\">\r\n                                        <p>{movie.release_date.slice(0, 4)}</p>\r\n                                    </h6>\r\n                                    <div className=\"movie-card-overview\">\r\n                                        <p>{overview}</p>\r\n                                        <Link href={{ pathname: '/movie', query: { id: movie.id } }}>\r\n                                            <a className=\"view-more\">View More</a>\r\n                                        </Link>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </Card>\r\n                    )\r\n                }}\r\n            </Query>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MovieCard;\r\n\r\n","import React, { Component } from 'react';\r\nimport { Query } from 'react-apollo';\r\nimport gql from 'graphql-tag';\r\nimport styled from 'styled-components';\r\nimport Link from 'next/link';\r\n\r\nconst NOW_PLAYING_QUERY = gql`\r\n    query NOW_PLAYING_QUERY {\r\n        nowPlaying {\r\n            results {\r\n                title\r\n                id\r\n                backdrop_path\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nconst Gallery = styled.div`\r\n    .gallery {\r\n        grid-column: 1 / span 3;\r\n        box-shadow: ${props => props.theme.boxShadow};\r\n        display: grid;\r\n        grid-gap: 0;\r\n        line-height: 0;\r\n        grid-template-columns: repeat(5, 1fr);\r\n        grid-auto-rows: 150px;\r\n    }\r\n    @media screen and (max-width: ${props => props.theme.maxWidth}) {\r\n        .gallery {\r\n            grid-column: 1 / span 5;\r\n        }\r\n    }\r\n    .item {\r\n        overflow: hidden;\r\n        display: grid;\r\n        grid-template-columns: 1;\r\n        grid-template-rows: 1;\r\n        margin-bottom: 0;\r\n    }\r\n    .item img {\r\n        grid-column: 1 / -1;\r\n        grid-row: 1 / -1;\r\n        width: 100%;\r\n        height: 100%;\r\n        object-fit: cover;\r\n    }\r\n    .item__overlay {\r\n        background: #c6e0ff42;\r\n        grid-column: 1 / -1;\r\n        grid-row: 1 / -1;\r\n        position: relative;\r\n        display: grid;\r\n        justify-items: center;\r\n        align-items: center;\r\n        transition: 0.2s;\r\n        transform: translateY(100%);\r\n        }\r\n\r\n    .item__overlay a {\r\n        font-size: 12px;\r\n        background: none;\r\n        border: 2px solid #f7f7f7;\r\n        color: #f7f7f7;\r\n        text-transform: uppercase;\r\n        background: (rgba(0, 0, 0, 0.7));\r\n        padding: 10px;\r\n    }\r\n\r\n    .item__overlay button:hover {\r\n        cursor: pointer;\r\n    }\r\n\r\n    .item:hover .item__overlay {\r\n        transform: translateY(0);\r\n    }\r\n\r\n    .item1 {\r\n        grid-row: span 4;\r\n        grid-column: span 3;\r\n    }\r\n\r\n    .item2 {\r\n        grid-row: span 2;\r\n        grid-column: span 2;\r\n    }\r\n\r\n    .item3 {\r\n        grid-row: span 2;\r\n        grid-column: span 1;\r\n    }\r\n\r\n    .item4 {\r\n        grid-row: span 1;\r\n        grid-column: span 1;\r\n    }\r\n\r\n    .item5 {\r\n        grid-row: span 1;\r\n        grid-column: span 1;\r\n    }\r\n\r\n    @media screen and (max-width: 768px) {\r\n        .item1, .item2, .item3, .item4, .item5 {\r\n            grid-row: span 2;\r\n            grid-column: span 5;\r\n        } \r\n    }\r\n`;\r\n\r\nclass NowPlaying extends Component {\r\n    randomNumber() {\r\n        return Math.floor(Math.random() * 4) + 1;\r\n    }\r\n    render() {\r\n        return (\r\n            <Query\r\n                query={NOW_PLAYING_QUERY}\r\n            >\r\n                {({ data, error, loading }) => {\r\n                    if (loading) return <p>Loading...</p>\r\n                    if (error) return <p>Error: {error.message}</p>\r\n                    const results = data.nowPlaying.results;\r\n                    return (\r\n                        <Gallery>\r\n                            <div className=\"gallery\">\r\n                                {results.slice(0, 5).map((movie, index) => {\r\n                                    const backdrop = `https://image.tmdb.org/t/p/original${movie.backdrop_path}`;\r\n                                    return (\r\n                                        <div key={index} className={`item item${index + 1} h${this.randomNumber()} v${this.randomNumber()}`}>\r\n                                            <img alt={movie.title} src={backdrop} />\r\n                                            <div className=\"item__overlay\">\r\n                                                <Link href={{ pathname: '/movie', query: { id: movie.id } }}>\r\n                                                    <a>View More</a>\r\n                                                </Link>\r\n                                            </div>\r\n                                        </div>\r\n                                    )\r\n                                })}\r\n                            </div>\r\n                        </Gallery>\r\n                    )\r\n                }}\r\n            </Query>\r\n        )\r\n    }\r\n}\r\n\r\nexport default NowPlaying;","import React, { Component } from 'react';\r\nimport { Query } from 'react-apollo';\r\nimport gql from 'graphql-tag';\r\nimport styled from 'styled-components';\r\nimport Link from 'next/link';\r\nimport MovieCard from './MovieCard';\r\n\r\nconst POPULAR_QUERY = gql`\r\n    query POPULAR_QUERY {\r\n        popular {\r\n            results {\r\n                id\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nconst PopularContainer = styled.div`\r\n    max-width: ${props => props.theme.maxWidth};\r\n    margin: auto;\r\n    .movie-grid {\r\n        display: grid;\r\n        grid-gap: 10px;\r\n        grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));\r\n    }\r\n`;\r\n\r\nclass Popular extends Component {\r\n    render() {\r\n        return (\r\n            <Query\r\n                query={POPULAR_QUERY}\r\n            >\r\n                {({ data, error, loading }) => {\r\n                    if (loading) return <p>Loading...</p>\r\n                    if (error) return <p>Error: {error.message}</p>\r\n                    const results = data.popular.results;\r\n                    return (\r\n                        <PopularContainer>\r\n                            <div className=\"movie-grid\">\r\n                                {results.slice(0, 8).map((movie, index) => {\r\n                                    return (\r\n                                        <MovieCard key={index} id={movie.id} />\r\n                                    )\r\n                                })}\r\n                            </div>\r\n                        </PopularContainer>\r\n                    )\r\n                }}\r\n            </Query>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Popular;","import React, { Component } from 'react';\r\nimport styled from 'styled-components';\r\nimport NowPlaying from '../components/NowPlaying';\r\nimport Popular from '../components/Popular';\r\n\r\nconst Container = styled.div`\r\n  max-width: ${props => props.theme.maxWidth};\r\n  margin: auto;\r\n  margin-top: 100px;\r\n  padding: 10px;\r\n  padding-bottom: 100px;\r\n  color: ${props => props.theme.mainColor};\r\n  .popular{\r\n    margin-top: 140px;\r\n  }\r\n  h3 {\r\n    margin-bottom: 15px;\r\n  }\r\n  .popular h3 {\r\n    margin-bottom: 15px;\r\n    padding: 0;\r\n  }\r\n`;\r\n\r\nconst About = styled.div`\r\n  padding-top: 100px;\r\n  padding-bottom: 100px;\r\n  color: ${props => props.theme.offWhite};\r\n  background-color: ${props => props.theme.mainColor};\r\n  text-align: center;\r\n  h5 {\r\n    font-size: 1.9rem;\r\n  }\r\n`;\r\n\r\nclass HomeContainer extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Container>\r\n          <div>\r\n            <h3>Top Movies In Theaters</h3>\r\n            <NowPlaying />\r\n          </div>\r\n          <div className=\"popular\">\r\n            <h3>Popular Titles</h3>\r\n            <Popular />\r\n          </div>\r\n        </Container>\r\n        <About>\r\n          <h5>Join Today!</h5>\r\n          <p>Create your Let's Watch account today. You will be able to keep track of all of your favorite movies in one place!</p>\r\n        </About>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default HomeContainer;","import HomeContainer from '../containers/HomeContainer';\r\n\r\nconst Homepage = props => (\r\n    <div>\r\n        <HomeContainer />\r\n    </div>\r\n);\r\n\r\nexport default Homepage;","module.exports = require(\"graphql-tag\");","module.exports = require(\"next/link\");","module.exports = require(\"react\");","module.exports = require(\"react-apollo\");","module.exports = require(\"react-loading\");","module.exports = require(\"styled-components\");"],"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","sourceRoot":""}